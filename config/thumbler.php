<?php defined('SYSPATH') OR die('No direct access allowed.');

return array
(
	// path to store all thumbs, generated by module
	'path' => $_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.'thumbs',

	// path from server root
	'path_url' => '/thumbs',

	// path, start from 'path' parameter above
	// Watermark image must already have it own opacity.
	'path_watermarks' => 'watermarks',

	// quality for jpeg, if per-image qualitu is NULL
	'default_quality' => 85,

	// You ORM models there
	'models' => array
	(
		'model' => array
		(
			// objects_per_folder: Max object in folder. May be reached 
			// limit_folders: Max amount of folders. If it reached, it will be filled from start
			// Typical configurtions:
			// objects_per_folder => 50, limit_folders => FALSE	// 50 object per folder
			// objects_per_folder => 1, limit_folders => 50		// 50 folder fields by circle
			// objects_per_folder => 1, limit_folders => FALSE	// one folder per object
			'objects_per_folder' => 50,
			'limit_folders' => FALSE,
		
			'max_width' => 2048,		// return exception if image too large. This can drmmatically save memory
			'max_height' => 2048,		// 
			'max_square' => 1024*1024,	// May be set seperated, if you want process long or high images, but 
										// you won't process large images.   

			'chmod' => FALSE,			// permissions on file after creating
		
			'thumbs' => array
			(
				'thumb' => array
				(
					'default_size' => 'original',
					'sizes' => array
					(
						'original' => array
						(
							// if both width and height are FALSE, width and height not changing
							'width' => FALSE,			// width of new image. If FALSE and save_ratio set, calculates depend of height
							'height' => FALSE,			// height of new image. If FALSE and save_ratio set, calculates depend of width

							'master' => Image::AUTO,	// Master dimension in terms of Kohana Image library
						
							'strict_size' => FALSE,		// image will be exactly specified width and height. Not influence to ratio
							'align_x' => '50%',			// '33%', 33, '33px'
							'align_y' => '50%',			// '33%', 33, '33px'
							'enlarge_small' => FALSE,	// If FALSE, images with small width and height will not be encrased. Only discrased
							'back_color' => 0,			// integer, color in format 0xRRGGBB														
							
							'watermark' => FALSE, 		// name of watermark image.
							'watermark_x' => '100%',	// '33%', 33, '33px'. Negative value mean right side
							'watermark_y' => '100%',	// '33%', 33, '33px'. Negative value mean bottom side
							
							'quality' => NULL, 			// For jpeg images
							'format' => 'jpg',			// 'jpg', 'png', 'gif',
						),
						'220×150' => array
						(
							// if both width and height are FALSE, width and height not changing
							'width' => 220,				// width of new image. If FALSE and save_ratio set, calculates depend of height
							'height' => 150,			// heifht of new image. If FALSE and save_ratio set, calculates depend of width
							
							'master' => Image::INVERSE,	// Master dimension in terms of Kohana Image library
							
							'strict_size' => TRUE,		// image will be exactly specified width and height. Not influence to ratio
							'align_x' => '50%',			// '33%', 33, '33px'
							'align_y' => '50%',			// '33%', 33, '33px'
							'enlarge_small' => TRUE,	// If FALSE, images with small width and height will not be encrased. Only discrased
							'back_color' => 0,			// integer, color in format 0xRRGGBB														
							
							'watermark' => FALSE, 		// name of watermark image.
							'watermark_x' => '100%',	// '33%', 33, '33px'. Negative value mean right side
							'watermark_y' => '100%',	// '33%', 33, '33px'. Negative value mean bottom side
							
							'quality' => NULL, 			// For jpeg images
							'format' => 'jpg',			// 'jpg', 'png', 'gif',
						),
						'600×600' => array
						(
							// if both width and height are FALSE, width and height not changing
							'width' => 600,				// width of new image. If FALSE and save_ratio set, calculates depend of height
							'height' => 600,			// heifht of new image. If FALSE and save_ratio set, calculates depend of width
							
							'master' => Image::NONE,	// Master dimension in terms of Kohana Image library
							
							'strict_size' => TRUE,		// image will be exactly specified width and height. Not influence to ratio
							'align_x' => '50%',			// '33%', 33, '33px'
							'align_y' => '50%',			// '33%', 33, '33px'
							'enlarge_small' => TRUE,	// If FALSE, images with small width and height will not be encrased. Only discrased
							'back_color' => 0,			// integer, color in format 0xRRGGBB														
							
							'watermark' => FALSE, 		// name of watermark image.
							'watermark_x' => '100%',	// '33%', 33, '33px'. Negative value mean right side
							'watermark_y' => '100%',	// '33%', 33, '33px'. Negative value mean bottom side
							
							'quality' => NULL, 			// For jpeg images
							'format' => 'jpg',			// 'jpg', 'png', 'gif',
						),
						'230×160' => array
						(
							'delete' => 'delete',
							'format' => 'jpg',			// 'jpg', 'png', 'gif',
						)
					),
				),
			),
		),
	)
);